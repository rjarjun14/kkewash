function globalValidate(objectId){var object="#"+objectId;var tagName=$("#"+objectId).prop("tagName");var fieldName=$("#"+objectId).attr("data-label");var x=$("#"+objectId).val();console.log(tagName);$(object).addClass("error");$(object).siblings("#error-msg").remove();if(tagName=="INPUT"){var type=$("#"+objectId).attr("type");console.log(type);var dataType=$(object).attr("data-type");switch(type){case "text":if(x.length==0){$(object).after('<span id="error-msg" >'+fieldName+" Cannot be blank </span>");return false;}else if(x.length<3){$(object).after('<span id="error-msg" >'+
fieldName+
" must be at least 4 characters. </span>");return false;}else{$(object).siblings("#error-msg").remove();$(object).removeClass("error");return true;}
break;case "tel":var reg=/^\+([0-9()\- ]{8,15})$/;if(reg.test(x)==false){$(object).after('<span id="error-msg" >Please enter the phone number in <BR/>+&lt;Country Code&gt; &lt;Phone Number&gt;  format<br>+## ######### </span>');return false;}else{$(object).siblings("#error-msg").remove();$(object).removeClass("error");return true;}
if(x==""){$(object).after('<span id="error-msg" >'+fieldName+" Cannot be blank</span>");return false;}else{$(object).siblings("#error-msg").remove();$(object).removeClass("error");return true;}
break;case "number":var reg=/^([0-9]{1,15})$/;if(reg.test(x)==false){$(object).after('<span id="error-msg" >Only numbers allowed for  '+
fieldName+
"</span>");return false;}else{$(object).siblings("#error-msg").remove();$(object).removeClass("error");return true;}
if(x==""){$(object).after('<span id="error-msg" >Your input should be a Number.</span>');return false;}else{$(object).siblings("#error-msg").remove();$(object).removeClass("error");return true;}
break;case "email":var reg=/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;if(reg.test(x)==false){$(object).after('<span id="error-msg" >'+fieldName+" is incorrect.</span>");return false;}else{const encodedEmail=btoa(x);(async()=>{try{var mailgunResponse=await validateEmailWithAPI(encodedEmail);console.log(mailgunResponse);console.log("====================================");console.log(mailgunResponse);console.log("====================================");if(mailgunResponse){$(object).siblings("#error-msg").remove();$(object).removeClass("error");return true;}else{$(object).after('<span id="error-msg" >'+fieldName+" is not valid.</span>");return false;}}catch(error){console.error("Error fetching data:",error);}})();}
if(x==""){$(object).after('<span id="error-msg" >'+fieldName+" Cannot be blank</span>");return false;}else{$(object).siblings("#error-msg").remove();$(object).removeClass("error");return true;}
break;}}else if(tagName=="SELECT"){if(x.length==0){$(object).after('<span id="error-msg" >'+fieldName+" Cannot be blank </span>");return false;}else{$(object).siblings("#error-msg").remove();$(object).removeClass("error");return true;}}else if(tagName=="TEXTAREA"){if(x.length==0){$(object).after('<span id="error-msg" >'+fieldName+" Cannot be blank </span>");return false;}else if(x.length<3){$(object).after('<span id="error-msg" >'+
fieldName+
" must be at least 4 characters. </span>");return false;}else{$(object).siblings("#error-msg").remove();$(object).removeClass("error");return true;}}
return true;}
async function validateEmailWithAPI(email){try{const response=await fetch(`https://email-validator.klickcrmcrawler.workers.dev/?email=${encodeURIComponent(email)}`);if(!response.ok){throw new Error(`Error: ${response.status} - ${response.statusText}`);}
const data=await response.json();if(data.status==200){console.log(`${email} is valid.`);return true;}else{console.log(`${email} is incorrect.`);return false;}}catch(error){console.error("Failed to validate email with API:",error);return true;}}